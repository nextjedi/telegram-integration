name: Deploy Telegram Trading Bot to Azure

on:
  push:
    branches: [ main ]
  schedule:
    # Start bot on weekdays at 7:30 AM IST (2:00 AM UTC)
    - cron: '0 2 * * 1-5'
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'deploy'
        type: choice
        options:
        - deploy
        - stop

env:
  AZURE_CONTAINER_APP_NAME: telegram-trading-bot
  AZURE_RESOURCE_GROUP: AlgoTrading
  DOCKER_HUB_REPO: arunabhp/telegram-trading-bot
  IMAGE_NAME: telegram-trading-bot

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event.inputs.action != 'stop'
    environment: prod
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_HUB_REPO }}:latest
          ${{ env.DOCKER_HUB_REPO }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        containerAppName: ${{ env.AZURE_CONTAINER_APP_NAME }}
        resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
        imageToDeploy: ${{ env.DOCKER_HUB_REPO }}:${{ github.sha }}
        environmentVariables: |
          TELEGRAM_API_ID=secretref:telegram-api-id
          TELEGRAM_API_HASH=secretref:telegram-api-hash
          TELEGRAM_PHONE_NUMBER=secretref:telegram-phone-number
          TRADING_API_ENDPOINT=${{ secrets.TRADING_API_ENDPOINT }}
          TELEGRAM_SESSION_NAME=telegram_trading_session
          BTST_CHANNEL_ID=${{ secrets.BTST_CHANNEL_ID }}
          DAYTRADE_CHANNEL_ID=${{ secrets.DAYTRADE_CHANNEL_ID }}
          UNIVEST_CHANNEL_ID=${{ secrets.UNIVEST_CHANNEL_ID }}
    
    - name: Set up auto-shutdown
      run: |
        # Schedule container app to scale to 0 at 4:30 PM IST (11:00 AM UTC)
        az containerapp update \
          --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --scale-rule-name "trading-hours" \
          --scale-rule-type "cron" \
          --scale-rule-metadata "cronExpression=0 11 * * 1-5" \
          --min-replicas 0 \
          --max-replicas 1

  stop-bot:
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'stop'
    environment: prod
    
    steps:
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Stop Container App
      run: |
        az containerapp update \
          --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --min-replicas 0 \
          --max-replicas 0

  # Weekend shutdown job
  weekend-shutdown:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 11 * * 6' # Saturdays at 11 AM UTC
    environment: prod
    
    steps:
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Scale down for weekend
      run: |
        az containerapp update \
          --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --min-replicas 0 \
          --max-replicas 0