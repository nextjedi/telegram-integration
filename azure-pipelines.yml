# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:
  pythonVersion: 3.7
  package: simple_package
  srcDirectory: /
  testsDirectory: tests/$(package)


trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'
# Use a specific Python version
- task: UsePythonVersion@0
  displayName: Use Python $(pythonVersion)
  inputs:
    versionSpec: $(pythonVersion)

# Install some tools needed for build (pylint, flake8, etc)
- bash: pip install -r requirements.txt -U --upgrade-strategy eager
  displayName: Install packages for build

# Lint via pylint. We need to find all .py files under src/simple_package and run pylint to avoid errors
# - bash: find $(srcDirectory) $(testsDirectory) -type f -name "*.py" | xargs pylint
#   displayName: "Linting: pylint"

# Lint via flake8. flake8 has better discovery, so we can invoke it directly
# - bash: flake8
#   displayName: "Linting: flake8"
#   workingDirectory: $(srcDirectory)

# Run tests
# - bash: pytest
#   displayName: Run tests
#   workingDirectory: $(testsDirectory)

# Our built source dist & wheel will land in src/simple_package/dist
# - bash: python setup.py sdist bdist_wheel
#   displayName: Build package
#   workingDirectory: $(srcDirectory)

# Upload everything in src/simple_package/dist to the build artifacts for later use or debugging
- task: PublishPipelineArtifact@0
  displayName: Publish artifacts
  inputs:
    artifactName: dist
    targetPath: $(srcDirectory)

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
